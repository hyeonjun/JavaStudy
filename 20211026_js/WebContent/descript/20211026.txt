* JavaScript

Java
 - 변수 선언 : 데이터 타입 변수명; 데이터 타입 변수명 = 초기값;
 - 메서드 선언 : 접근제한자 반환타입 메서드명(매개변수 리스트) { }
 - 메서드 선언 : 접근제한자 반환데이터타입 메서드명(매개변수 리스트) { return 반환데이터; }
 - 클래스 선언 : 접근제한자 class 클래스명 {
 				접근제한자 데이터타입 변수병;
 			 }
	
	
JavaScript : 데이터 타입 없음
 - 변수 선언 : var 변수명; var 변수명 = 초기값;
 - 함수 선언 : function 함수명(매개변수 리스트) {}
 - 함수 선언 : function 함수명(매개변수 리스트) { return 반환 데이터; }
 - 변수에 함수 저장 가능 :
 	var fnc = function() {}
 	var o = new Object();
 	o.a = 1;
 	o.b = "문자";
 	var o2 = {a:1, b:"문자열"};
 
=========================================================

JavaScript 사용 이유 :
 html 태그에 대한 이벤트 처리하기 위해.
 
JavaScript 내장 함수
1. document 객체 : <body></body>
	=> querySelector() : 태그, id, class 명을 이용하여 요소 선택
	=> wirte() : body 태그 사이에 직접 글 작성

2. Date 객체 : 현재 시스템 날짜 및 시간 추출
	=> toLocaleTimeStirng() : Date 객체로부터 현재 지역 시간을 문자열로 반환.
 
3. querySelect()로 추출된 태그 객체의 innerHTML 속성:
 => 추철된 태그 객체의 시작태그와 닫는 태그 사이에 새로운 내용을 삽입
    ineerHTML = "새로운 내용";
 => 내부의 내용을 추출할 수 있는 속성
 	var 변수명 = ~~~.innerHTML; 
==========================================================

Java에서의 for()
- for(초기값; 비교; 증감;) {}
- for(변수 : 다중값(리스트)) {}
- for(;;) {} -> 무한루프
==========================================================

html / javascript

html : 위에서부터 아래로 순차적으로 실행...
1. <!doctype html> => 웹 브라우저 엔진 : html5 엔진 / html4 엔진
2. <html>
3.    <head>
4.		  <meta charset="utf-8">
5.		  <title>~~~</title>
6.		  <link ~~~>
7.        <script>
8.			  var tble = document.querySelector("#tbl"); // <= null      

		  </script>
      </head>
9.    <body>
      	 <table id="tbl"></table>
      </body>
   </html>
 
 => script 문이 먼저 실행되지 않도록 function init(){ javascript }
    <body onload="init()"> ~~~ </body>를 해주면 body가 모두 로드가 끝나면 init() 함수가 실행된다.

* 이벤트
onload : 이벤트가 설정된 태그가 모두 로드가 끝나면 지정한 함수를 호출하는 이벤트
onclick : 이벤트가 설정된 태그를 사용자가 마우스 클릭 시 
======================================================================

배열 : [] 를 이용하여 선언, 데이터의 개수 (length)

객체  : Object => 선언 - 1. var o = new Object();
					 	o.num = 10;
					 	o.name = "이름";
				     2. var o2 = {키:값, 키:값...}
				        var o3 = {num:10, name:"이름"};
				        

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 